<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.lagou.dao.RoleMapper">

    <!--查询所有角色（条件）-->
    <select id="findAllRole" parameterType="com.lagou.domain.Role" resultType="com.lagou.domain.Role">

        select * from roles
        <where>
            <if test="name !=null and name != '' ">
                and name = #{name}
            </if>
        </where>

    </select>

    <resultMap id="ResourceCategory" type="com.lagou.domain.ResourceCategory">
        <id property="id" column="id"/>
        <result property="name" column="name"/>
        <collection property="resourceList" ofType="com.lagou.domain.Resource" column="{roleId=role_id,id=id}" select="findResourceListByRoleId2"/>
    </resultMap>

    <!--查询当前角色拥有的资源分类信息-->
    <select id="findResourceListByRoleId" parameterType="int" resultMap="ResourceCategory">
        SELECT DISTINCT rc.id,rc.name,rrr.role_id
            FROM role_resource_relation rrr
            INNER JOIN resource r ON rrr.resource_id = r.id
            INNER JOIN resource_category rc ON r.category_id = rc.id
        WHERE rrr.role_id = #{roleId};
    </select>

    <!--查询当前角色拥有的资源信息-->
    <select id="findResourceListByRoleId2" parameterType="java.util.HashMap" resultType="com.lagou.domain.Resource">
        SELECT r.id,r.name,r.url,r.category_id,r.description
            FROM role_resource_relation rrr
            INNER JOIN resource r ON rrr.resource_id = r.id
        WHERE rrr.role_id = #{roleId} AND r.category_id = #{id};
    </select>

    <!--添加广告-->
    <insert id="saveRole" parameterType="com.lagou.domain.Role" >
        insert INTO roles VALUES(NULL,#{code},#{name},#{description},#{createdTime},#{updatedTime},#{createdBy},#{updatedBy});
    </insert>
    <!--更新广告-->
    <update id="updateRole" parameterType="com.lagou.domain.Role">
        update roles
        <trim prefix="SET" suffixOverrides=",">
            <if test="code != null and code != ''">
                code = #{code},
            </if>
            <if test="name != null and name != ''">
                name = #{name},
            </if>
            <if test="description != null and description != ''">
                description = #{description},
            </if>
            <if test="createdTime != null">
                created_time=#{createdTime},
            </if>
            <if test="updatedTime != null">
                updated_time=#{updatedTime},
            </if>
            <if test="createdBy != null">
                created_by=#{createdBy},
            </if>
            <if test="updatedBy != null">
                updated_by=#{updatedBy},
            </if>
        </trim>
        <where>
            <if test="id != null and id != '' ">id = #{id}</if>
        </where>
    </update>

    <!-- 根据角色ID查询关联的菜单信息ID public List<Integer> findMenuByRoleId(Integer roleid);-->
    <select id="findMenuByRoleId" resultType="int" parameterType="int">
        SELECT m.id
            FROM roles r INNER JOIN role_menu_relation rm ON r.id = rm.role_id
	                     INNER JOIN menu m ON m.id = rm.menu_id WHERE r.id =#{id}
    </select>


    <!--根据roleid删除在中间表与菜单的关联关系-->
    <delete id="deleteRoleContextMenu" parameterType="int">
        delete  from role_menu_relation where role_id = #{rid}
    </delete>

    <!--为角色分配菜单-->
    <insert id="roleContextMenu" parameterType="com.lagou.domain.Role_menu_relation">
        insert into role_menu_relation values(null,#{menuId},#{roleId},#{createdTime},#{updatedTime},#{createdBy},#{updatedby})
    </insert>

    <!--删除角色     public void deleteRole(Integer roleid);-->
    <delete id="deleteRole" parameterType="int">
        delete from roles where id = #{roleid}
    </delete>

    <!--根据角色ID删除关联表-->
    <delete id="deleteRelationByRoleId" parameterType="int">
        DELETE FROM role_resource_relation WHERE role_id = #{rid}
    </delete>

    <!--为角色分配资源, 删除完成后 ,插入最新的关联关系-->
    <insert id="saveRelationByRoleResourceVo" parameterType="com.lagou.domain.RoleResourceVo">
        INSERT INTO role_resource_relation VALUES
        <foreach collection="resourceIdList" item="resource_id" separator=",">
            (NULL,#{resource_id},#{roleId},#{createdTime},#{updatedTime},#{createdBy},#{updatedBy})
        </foreach>
    </insert>

</mapper>